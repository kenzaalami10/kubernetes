openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -sha256 -days 3650 -nodes -subj "/C=MA/ST=StateName/L=Citt/O=CompanyName/OU=CompanySectionName/CN=localhost 


docker run -d —name registry -p 443:5000 -v /data:/data -v /certs:/certs -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/data -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/cert.pem -e REGISTRY_HTTP_TLS_KEY=/certs/key.pem registry


systemctl enable —now crio
kubeadm config images pull --cri-socket unix:///var/run/crio/crio.sock --kubernetes-version v1.29.2 --image-repository ip

kubeadm init --kubernetes-version v1.29.2


openssl genrsa -aes256 -out ca.key 2048
openssl req -x509 -new -nodes -key ca.key -sha256 -days 1826 -out ca.crt
sudo cp ca.crt /etc/pki/ca-trust/source/anchors/ca.crt sudo update-ca-trust
openssl req -new -nodes -out registry.csr -newkey rsa:4096 -keyout registry.key cat > registry.v3.ext << EOF authorityKeyIdentifier=keyid,issuer basicConstraints=CA:FALSE keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment subjectAltName = @alt_names [alt_names] DNS.1 = localhost IP.1 = 127.0.0.1 IP.2 = ip vm
 EOF


[req]
req_extensions = v3_req
distinguished_name = req_distinguished_name
prompt = no

[req_distinguished_name]
CN = 192.168.100.254

[v3_req]
keyUsage = digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names

[alt_names]
IP.1 = 192.168.100.254

openssl req -x509 -nodes -newkey rsa:4096 -keyout registry.key -out registry.crt -days 365 -config openssl.cnf



kubectl create secret generic registry-secret --from-file=registry.crt --from-file=registry.key


openssl x509 -req -in registry.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out registry.crt -days 730 -sha256 -extfile registry.v3.ext





