apiVersion: v1
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system
data:
  Corefile: |
    .:53 {
        errors
        health {
          lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
          pods insecure
          fallthrough in-addr.arpa ip6.arpa
        }
        prometheus :9153
        forward . /etc/resolv.conf
        cache 30
        loop
        reload
        loadbalance
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coredns
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: kube-dns
  namespace: kube-system
  labels:
    k8s-app: kube-dns
spec:
  selector:
    k8s-app: kube-dns
  clusterIP: 10.96.0.10
  ports:
  - name: dns
    port: 53
    protocol: UDP
  - name: dns-tcp
    port: 53
    protocol: TCP
  - name: metrics
    port: 9153
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coredns
  namespace: kube-system
  labels:
    k8s-app: kube-dns
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
  template:
    metadata:
      labels:
        k8s-app: kube-dns
    spec:
      serviceAccountName: coredns
      containers:
      - name: coredns
        image: 10.173.181.26/coredns:v1.11.1
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: 170Mi
          requests:
            cpu: 100m
            memory: 70Mi
        args: [ "-conf", "/etc/coredns/Corefile" ]
        volumeMounts:
        - name: config-volume
          mountPath: /etc/coredns
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /ready
            port: 8181
            scheme: HTTP
          initialDelaySeconds: 0
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      dnsPolicy: Default
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      volumes:
      - name: config-volume
        configMap:
          name: coredns
          items:
          - key: Corefile
            path: Corefile



kubectl apply -f coredns.yaml




[devops@DEVAD1M ~]$ rm  coredns.yaml
[devops@DEVAD1M ~]$ nano  coredns.yaml
[devops@DEVAD1M ~]$ nano  coredns.yaml
[devops@DEVAD1M ~]$ kubectl apply -f coredns.yaml
configmap/coredns configured
serviceaccount/coredns unchanged
service/kube-dns unchanged
deployment.apps/coredns configured
[devops@DEVAD1M ~]$ kubectl get pods -A
NAMESPACE      NAME                              READY   STATUS              RESTARTS        AGE
kube-flannel   kube-flannel-ds-w8jv2             1/1     Running             0               54m
kube-system    coredns-675f547b9c-7mbc2          0/1     Pending             0               6m14s
kube-system    coredns-675f547b9c-7zzfh          0/1     Pending             0               6m14s
kube-system    coredns-76b55c6b58-mk7cr          0/1     ContainerCreating   0               9s
kube-system    etcd-devad1m                      1/1     Running             2               5h50m
kube-system    kube-apiserver-devad1m            1/1     Running             2 (5h51m ago)   5h50m
kube-system    kube-controller-manager-devad1m   1/1     Running             2               5h50m
kube-system    kube-proxy-skl2m                  1/1     Running             0               5h50m
kube-system    kube-scheduler-devad1m            1/1     Running             2               5h50m
[devops@DEVAD1M ~]$
